{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "sgx",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "group_definition"
          },
          {
            "type": "SYMBOL",
            "name": "pattern_definition"
          },
          {
            "type": "SYMBOL",
            "name": "standalone_pattern"
          }
        ]
      }
    },
    "standalone_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "metadata_block"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "pattern"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "."
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "pattern_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "metadata_block"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "pattern_name"
        },
        {
          "type": "STRING",
          "value": ":="
        },
        {
          "type": "SYMBOL",
          "name": "pattern"
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "basic_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "compound_pattern"
        }
      ]
    },
    "basic_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "optional_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "node_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_reference"
        },
        {
          "type": "SYMBOL",
          "name": "bare_pattern"
        }
      ]
    },
    "compound_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "negation"
        },
        {
          "type": "SYMBOL",
          "name": "relation"
        },
        {
          "type": "SYMBOL",
          "name": "grouped_expr"
        }
      ]
    },
    "grouped_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "boolean_operation"
        },
        {
          "type": "SYMBOL",
          "name": "optional_relation"
        }
      ]
    },
    "boolean_operation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "basic_pattern"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "&"
            },
            {
              "type": "STRING",
              "value": "|"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "basic_pattern"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "optional_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "node_pattern"
            },
            {
              "type": "SYMBOL",
              "name": "pattern_reference"
            },
            {
              "type": "SYMBOL",
              "name": "bare_pattern"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "?"
        }
      ]
    },
    "bare_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bare_word"
        },
        {
          "type": "SYMBOL",
          "name": "bare_regex"
        }
      ]
    },
    "bare_word": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[一-龯ぁ-んァ-ヶ]+"
      }
    },
    "bare_regex": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[^\\\\/]"
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "\\"
                    },
                    {
                      "type": "PATTERN",
                      "value": "."
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": "/"
          }
        ]
      }
    },
    "optional_relation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "relation"
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "?"
        }
      ]
    },
    "negation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "!"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "basic_pattern"
            },
            {
              "type": "SYMBOL",
              "name": "boolean_operation"
            }
          ]
        }
      ]
    },
    "relation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "basic_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "relation_operator"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "relation_name"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "basic_pattern"
        }
      ]
    },
    "relation_name": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "boolean_expr": {
      "type": "PREC",
      "value": "boolean_expr",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "basic_pattern"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "&"
              },
              {
                "type": "STRING",
                "value": "|"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "basic_pattern"
          }
        ]
      }
    },
    "node_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "$"
                },
                {
                  "type": "SYMBOL",
                  "name": "attributes"
                },
                {
                  "type": "SYMBOL",
                  "name": "bare_word"
                },
                {
                  "type": "SYMBOL",
                  "name": "bare_regex"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "node_name"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "attributes": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "attribute"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ";"
              },
              {
                "type": "SYMBOL",
                "name": "attribute"
              }
            ]
          }
        }
      ]
    },
    "attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "key"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "value"
        }
      ]
    },
    "key": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "![a-zA-Z_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF][^\\s;:{}=\\/&|!()\\[\\]<>.~@]*"
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF][^\\s;:{}=\\/&|!()\\[\\]<>.~@]*"
          }
        ]
      }
    },
    "value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "regex"
        }
      ]
    },
    "regex": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[^\\\\/]"
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "\\"
                    },
                    {
                      "type": "PATTERN",
                      "value": "."
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": "/"
          }
        ]
      }
    },
    "node_name": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "name": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "relation_operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": ">"
          },
          {
            "type": "STRING",
            "value": "<"
          },
          {
            "type": "STRING",
            "value": "@"
          },
          {
            "type": "PATTERN",
            "value": ">[a-zA-Z]+"
          },
          {
            "type": "PATTERN",
            "value": "<[a-zA-Z]+"
          },
          {
            "type": "STRING",
            "value": ">nsubj"
          },
          {
            "type": "STRING",
            "value": ">dobj"
          },
          {
            "type": "STRING",
            "value": ">nmod"
          },
          {
            "type": "STRING",
            "value": ">prep"
          },
          {
            "type": "STRING",
            "value": ">appos"
          },
          {
            "type": "STRING",
            "value": "<subj"
          },
          {
            "type": "STRING",
            "value": "<agent"
          },
          {
            "type": "STRING",
            "value": ">conj"
          },
          {
            "type": "STRING",
            "value": ">nmod:poss"
          },
          {
            "type": "STRING",
            "value": ">nmod:of"
          },
          {
            "type": "STRING",
            "value": ">>"
          },
          {
            "type": "STRING",
            "value": "<<"
          },
          {
            "type": "STRING",
            "value": ".."
          },
          {
            "type": "STRING",
            "value": "."
          }
        ]
      }
    },
    "pattern_reference": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_name"
        }
      ]
    },
    "pattern_name": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "metadata_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "---"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "metadata_line"
          }
        },
        {
          "type": "STRING",
          "value": "---"
        }
      ]
    },
    "metadata_line": {
      "type": "PATTERN",
      "value": "[^\\n]+"
    },
    "group_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "///"
        },
        {
          "type": "STRING",
          "value": "group"
        },
        {
          "type": "SYMBOL",
          "name": "group_name"
        },
        {
          "type": "STRING",
          "value": "///"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "group_metadata_line"
          }
        },
        {
          "type": "STRING",
          "value": "///"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "pattern_definition"
          }
        },
        {
          "type": "STRING",
          "value": "///"
        }
      ]
    },
    "group_name": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "group_metadata_line": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[^/][^\\n]*"
      }
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF][^\\s;:{}=\\/&|!()\\[\\]<>.~@]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
